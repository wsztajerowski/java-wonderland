name: Run tests on AWS

on:
  pull_request:

env:
  AWS_REGION: eu-north-1
  WORKFLOW_ROLE_ARN: arn:aws:iam::653932013369:role/java-wonderland-github-actions-workflow-role
  RUNNER_ROLE_NAME: java-wonderland-github-actions-runner-role
  AMI_ID: ami-099451d897f38cebe
  EC2_INSTANCE_TYPE: t3.micro
  SUBNET_ID: subnet-3914dd42
  SECURITY_GROUP_ID: sg-09ab440252230df2a
  S3_BUILD_OUTPUT_PATH: java-wonderland/gha-outputs/${{ github.event.number != '' && github.event.number || github.ref }}/${{ github.run_number }}/

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B verify --file pom.xml
      - name: Upload JMH runner jar
        uses: actions/upload-artifact@v3
        with:
          name: jmh-runner
          path: jmh-benchmarks/target/jmh-benchmarks.jar
          retention-days: 7
          if-no-files-found: error
      - name: Upload JCStress runner jar
        uses: actions/upload-artifact@v3
        with:
          name: jcstress-runner
          path: stress-tests/target/stress-tests.jar
          retention-days: 7
          if-no-files-found: error

  start-runner-1:
    name: Start EC2 runner 1
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.WORKFLOW_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GHA_EC2_PAT }}
          ec2-image-id: ${{ env.AMI_ID }}
          ec2-instance-type: ${{ env.EC2_INSTANCE_TYPE }}
          subnet-id: ${{ env.SUBNET_ID }}
          security-group-id: ${{ env.SECURITY_GROUP_ID }}
          iam-role-name: ${{ env.RUNNER_ROLE_NAME }}
          aws-resource-tags: > 
            [
              {"Key": "project", "Value": "java-wonderland"},
              {"Key": "run_id", "Value": "${{ github.run_id }}" },
              {"Key": "runner", "Value": "runner-1"}
            ]
  run-jmh:
    name: Run JMH tests
    needs:
     - start-runner-1
    runs-on: ${{ needs.start-runner-1.outputs.label }} # run the job on the newly created runner
    steps:
      - name: Download JMH runner
        uses: actions/download-artifact@v3
        with:
          name: jmh-runner
      - name: print envs
        run: echo ${{ env.S3_BUILD_OUTPUT_PATH }}
      - name: Copy files to the test bucket with the AWS CLI
        run: |
          aws s3 cp jmh-benchmarks.jar s3://${{ env.S3_BUILD_OUTPUT_PATH }}

  stop-runner-1:
    name: Stop EC2 runner 1
    needs:
      - start-runner-1
      - run-jmh
    if: always()
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.WORKFLOW_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GHA_EC2_PAT }}
          label: ${{ needs.start-runner-1.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner-1.outputs.ec2-instance-id }}

  start-runner-2:
    name: Start EC2 runner 2
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.WORKFLOW_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GHA_EC2_PAT }}
          ec2-image-id: ${{ env.AMI_ID }}
          ec2-instance-type: ${{ env.EC2_INSTANCE_TYPE }}
          subnet-id: ${{ env.SUBNET_ID }}
          security-group-id: ${{ env.SECURITY_GROUP_ID }}
          iam-role-name: ${{ env.RUNNER_ROLE_NAME }}
          aws-resource-tags: >
            [
              {"Key": "project", "Value": "java-wonderland"},
              {"Key": "run_id", "Value": "${{ github.run_id }}" },
              {"Key": "runner", "Value": "runner-2"}
            ]
  run-jmh-with-async:
    name: Run JMH tests with async prof
    needs:
     - start-runner-2
    runs-on: ${{ needs.start-runner-2.outputs.label }} # run the job on the newly created runner
    steps:
      - name: Download JMH runner
        uses: actions/download-artifact@v3
        with:
          name: jmh-runner
      - name: Display structure of downloaded files
        run: ls -R
#      - name: Copy files to the test bucket with the AWS CLI
#        run: |
#          aws s3 cp jmh-benchmarks.jar s3://java-wonderland
  stop-runner-2:
    name: Stop EC2 runner 2
    needs:
      - start-runner-2
      - run-jmh-with-async
    if: always()
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.WORKFLOW_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GHA_EC2_PAT }}
          label: ${{ needs.start-runner-2.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner-2.outputs.ec2-instance-id }}

  start-runner-3:
    name: Start EC2 runner 3
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.WORKFLOW_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GHA_EC2_PAT }}
          ec2-image-id: ${{ env.AMI_ID }}
          ec2-instance-type: ${{ env.EC2_INSTANCE_TYPE }}
          subnet-id: ${{ env.SUBNET_ID }}
          security-group-id: ${{ env.SECURITY_GROUP_ID }}
          iam-role-name: ${{ env.RUNNER_ROLE_NAME }}
          aws-resource-tags: >
            [
              {"Key": "project", "Value": "java-wonderland"},
              {"Key": "run_id", "Value": "${{ github.run_id }}" },
              {"Key": "runner", "Value": "runner-3"}
            ]
  run-jcstress:
    name: Run JCStress tests
    needs:
     - start-runner-3
    runs-on: ${{ needs.start-runner-3.outputs.label }} # run the job on the newly created runner
    steps:
      - name: Download JMH runner
        uses: actions/download-artifact@v3
        with:
          name: jcstress-runner
      - name: Display structure of downloaded files
        run: ls -R
      - name: Copy files to the test bucket with the AWS CLI
        run: |
          aws s3 cp stress-tests.jar s3://java-wonderland

  stop-runner-3:
    name: Stop EC2 runner 3
    needs:
      - start-runner-3
      - run-jcstress
    if: always()
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.WORKFLOW_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GHA_EC2_PAT }}
          label: ${{ needs.start-runner-3.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner-3.outputs.ec2-instance-id }}
